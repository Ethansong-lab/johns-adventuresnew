import pygame
import sys
import random

# Initialize Pygame
pygame.init()

# Constants
CELL_SIZE = 20
GRID_WIDTH = 30
GRID_HEIGHT = 20
WIDTH = CELL_SIZE * GRID_WIDTH
HEIGHT = CELL_SIZE * GRID_HEIGHT
FPS = 10

# Colors
BLACK = (0, 0, 0)
GREEN = (0, 255, 0)
DARK_GREEN = (0, 155, 0)
RED = (255, 0, 0)
WHITE = (255, 255, 255)

# Setup display
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Snake Game")
clock = pygame.time.Clock()
font = pygame.font.SysFont(None, 36)

# Snake and Food
def draw_cell(x, y, color):
    pygame.draw.rect(screen, color, (x * CELL_SIZE, y * CELL_SIZE, CELL_SIZE, CELL_SIZE))

def random_food_position(snake):
    while True:
        pos = (random.randint(0, GRID_WIDTH - 1), random.randint(0, GRID_HEIGHT - 1))
        if pos not in snake:
            return pos

# Game Reset
def reset_game():
    snake = [(5, 5), (4, 5), (3, 5)]
    direction = (1, 0)
    food = random_food_position(snake)
    score = 0
    return snake, direction, food, score

# Game Variables
snake, direction, food, score = reset_game()
game_over = False

# Game Loop
running = True
while running:
    clock.tick(FPS)

    # Events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        if event.type == pygame.KEYDOWN and not game_over:
            if event.key == pygame.K_UP and direction != (0, 1):
                direction = (0, -1)
            elif event.key == pygame.K_DOWN and direction != (0, -1):
                direction = (0, 1)
            elif event.key == pygame.K_LEFT and direction != (1, 0):
                direction = (-1, 0)
            elif event.key == pygame.K_RIGHT and direction != (-1, 0):
                direction = (1, 0)
        if event.type == pygame.KEYDOWN and game_over:
            if event.key == pygame.K_r:
                snake, direction, food, score = reset_game()
                game_over = False

    if not game_over:
        # Move Snake
        new_head = (snake[0][0] + direction[0], snake[0][1] + direction[1])

        # Check for collisions
        if (
            new_head in snake or
            not (0 <= new_head[0] < GRID_WIDTH) or
            not (0 <= new_head[1] < GRID_HEIGHT)
        ):
            game_over = True
        else:
            snake.insert(0, new_head)

            if new_head == food:
                score += 1
                food = random_food_position(snake)
            else:
                snake.pop()

    # Draw Everything
    screen.fill(BLACK)
    draw_cell(food[0], food[1], RED)
    for segment in snake:
        draw_cell(segment[0], segment[1], GREEN)

    # Score
    score_text = font.render(f"Score: {score}", True, WHITE)
    screen.blit(score_text, (10, 10))

    # Game Over Text
    if game_over:
        over_text = font.render("Game Over! Press R to Restart", True, RED)
        screen.blit(over_text, (WIDTH // 2 - over_text.get_width() // 2, HEIGHT // 2))

    pygame.display.flip()

pygame.quit()
sys.exit()
